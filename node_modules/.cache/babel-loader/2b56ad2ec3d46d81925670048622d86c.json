{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\react\\\\src\\\\components\\\\elements\\\\MovieInfo\\\\MovieInfo.js\";\nimport React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './MovieInfo.css';\n\nconst MovieInfo = props => {\n  return React.createElement(\"div\", {\n    className: \"rmdb-movieinfo\",\n    style: {\n      background: props.movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(props.movie.backdrop_path, \"')\") : '#000000'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-thumb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(MovieThumb, {\n    image: props.movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(props.movie.poster_path) : './images/no_image.jpg',\n    clickable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"rmdb-movieinfo-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.movie.title), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"PLOT\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.movie.overview), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"IMDB RATING\"), React.createElement(\"div\", {\n    className: \"rmdb-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"meter\", {\n    min: \"0\",\n    max: \"100\",\n    optimum: \"100\",\n    low: \"40\",\n    high: \"70\",\n    value: props.movie.vote_average * 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"rmdb-score\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.movie.vote_average)), props.directors.length > 1 ? React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"DIRECTORS\") : React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"DIRECTOR\"), props.directors.map((element, i) => {\n    return React.createElement(\"p\", {\n      key: i,\n      className: \"rmdb-director\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, element.name);\n  }), React.createElement(FontAwesome, {\n    className: \"fa-film\",\n    name: \"film\",\n    size: \"5x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))));\n};\n\nexport default MovieInfo;","map":{"version":3,"sources":["C:\\wamp64\\www\\react\\src\\components\\elements\\MovieInfo\\MovieInfo.js"],"names":["React","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","FontAwesome","MovieThumb","MovieInfo","props","background","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","element","i","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAuBC,WAAvB,EAAmCC,aAAnC,QAAuD,iBAAvD;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAS,GAAGC,KAAD,IAAS;AACtB,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAACD,KAAK,CAACE,KAAN,CAAYC,aAAZ,kBAAmCT,cAAnC,SAAoDE,aAApD,SAAoEI,KAAK,CAACE,KAAN,CAAYC,aAAhF,UAAkG;AAA9G,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEH,KAAK,CAACE,KAAN,CAAYE,WAAZ,aAA2BV,cAA3B,SAA4CC,WAA5C,SAA0DK,KAAK,CAACE,KAAN,CAAYE,WAAtE,IAAoF,uBAAvG;AACA,IAAA,SAAS,EAAE,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAK,CAACE,KAAN,CAAYG,KAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACE,KAAN,CAAYI,QAAhB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,GAAG,EAAC,GAAX;AAAe,IAAA,GAAG,EAAC,KAAnB;AAAyB,IAAA,OAAO,EAAC,KAAjC;AAAuC,IAAA,GAAG,EAAC,IAA3C;AAAgD,IAAA,IAAI,EAAC,IAArD;AAA0D,IAAA,KAAK,EAAEN,KAAK,CAACE,KAAN,CAAYK,YAAZ,GAA2B,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BP,KAAK,CAACE,KAAN,CAAYK,YAAvC,CAFJ,CALJ,EASKP,KAAK,CAACQ,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA5B,GAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATpD,EAWKT,KAAK,CAACQ,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,OAAD,EAASC,CAAT,KAAa;AAC1B,WAAO;AAAG,MAAA,GAAG,EAAEA,CAAR;AAAW,MAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCD,OAAO,CAACE,IAA9C,CAAP;AACP,GAFA,CAXL,EAeI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,SAAvB;AAAiC,IAAA,IAAI,EAAC,MAAtC;AAA6C,IAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CALJ,CAHJ,CADJ;AA8BH,CA/BD;;AAgCA,eAAgBd,SAAhB","sourcesContent":["import React from 'react';\r\nimport {IMAGE_BASE_URL,POSTER_SIZE,BACKDROP_SIZE} from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb'\r\nimport './MovieInfo.css'\r\n\r\nconst MovieInfo =(props)=>{\r\n    return (\r\n        <div className='rmdb-movieinfo'\r\n        style={{background:props.movie.backdrop_path? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`:'#000000'}}\r\n        >\r\n            <div className='rmdb-movieinfo-content'>\r\n                <div className='rmdb-movieinfo-thumb'> \r\n                    <MovieThumb image={props.movie.poster_path?`${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`:'./images/no_image.jpg'}\r\n                    clickable={false}/>\r\n                </div>\r\n                <div className='rmdb-movieinfo-text'>\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className='rmdb-rating'>\r\n                        <meter min='0' max='100' optimum='100' low='40' high='70' value={props.movie.vote_average * 10 }></meter>\r\n                        <p className='rmdb-score'>{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ?<h3>DIRECTORS</h3>:<h3>DIRECTOR</h3>}\r\n\r\n                    {props.directors.map((element,i)=>{\r\n                            return <p key={i} className='rmdb-director'>{element.name}</p>\r\n                    })}\r\n\r\n                    <FontAwesome className='fa-film' name='film' size='5x'/>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default  MovieInfo;"]},"metadata":{},"sourceType":"module"}